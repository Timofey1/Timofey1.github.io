<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Academic</title>
    <link>https://example.com/</link>
      <atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml" />
    <description>Academic</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate>
    <image>
      <url>https://example.com/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Academic</title>
      <link>https://example.com/</link>
    </image>
    
    <item>
      <title>Example Talk</title>
      <link>https://example.com/talk/example-talk/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>https://example.com/talk/example-talk/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Wowchemy&amp;rsquo;s &lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further event details, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;page elements&lt;/a&gt; such as image galleries, can be added to the body of this page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scientific programming languages</title>
      <link>https://example.com/post/spl/</link>
      <pubDate>Sat, 28 May 2022 18:18:53 +0300</pubDate>
      <guid>https://example.com/post/spl/</guid>
      <description>&lt;h2 id=&#34;1-python&#34;&gt;1. Python&lt;/h2&gt;
&lt;hr&gt;
As discussed previously, Python has the highest popularity among data scientists. This is due to its wide range of uses. It is often the go-to choice for a range of tasks for domains, such as, machine learning, deep learning, artificial intelligence and other popular forms of technology. 
&lt;p&gt;These tasks are made easier due to Python’s powerful data science libraries. Some of the more popular libraries include Keras, Scikit-Learn, matplotlib, and tensorflow.&lt;/p&gt;
&lt;p&gt;Python can also support very important tasks, such as data collection, analysis, modeling, and visualisation which are all key factors to work with in big data.&lt;/p&gt;
&lt;p&gt;You will never be left without an answer when using Python. This language has a large community for support which is another reason it holds a vital place among the top tools for data science.&lt;/p&gt;
&lt;p&gt;Best used for: Python is best used for automation. Automating tasks is extremely valuable in data science and will ultimately save you a lot of time, and provide valuable data.&lt;/p&gt;
&lt;p&gt;Pros/Cons: The biggest pro of Python is it’s popularity among data scientists. This wide popularity means that there is endless support and a lot of resources available to continue your education. It’s wide range of open source tools for visualization and machine learning also make Python extremely useful and popular.&lt;/p&gt;
&lt;p&gt;There are very few cons to Python, but the biggest complaint among users is it’s speed. Python is relatively slow for computation in comparison to other languages.&lt;/p&gt;
&lt;p&gt;Further reading: R vs. Python — Which One Should You Learn?&lt;/p&gt;
&lt;h2 id=&#34;2-javascript&#34;&gt;2. JavaScript&lt;/h2&gt;
&lt;hr&gt;
JavaScript is the most popular programming language to learn. It is most commonly used for web development due its capability of building rich and interactive web pages. That being said, it also finds a home in the data science world. JavaScript is an amazing choice for creating visualizations, which is an excellent way to convey big data.
&lt;p&gt;While JavaScript is a great language to learn, it is more of an aid in data science than a primary data science language. We still highly recommend learning JavaScript along with other languages you may learn, due to its popularity and versatility.&lt;/p&gt;
&lt;p&gt;Best used for: JavaScript is best used for web development.&lt;/p&gt;
&lt;p&gt;Pros/Cons: JavaScript is amazing when it comes to creating visualizations, which can be very helpful when working with big data.&lt;/p&gt;
&lt;p&gt;Unfortunately, JavaScript just doesn&amp;rsquo;t have the range of data science packages, and built in functionality compared to some of the more popular data science languages.&lt;/p&gt;
&lt;h2 id=&#34;3-java&#34;&gt;3. Java&lt;/h2&gt;
&lt;hr&gt;
Java, which is sometimes referred to as &#34;Write Once, Run anywhere&#34; is a programming language that has been used by top businesses for secure enterprise development and is now being used for tasks involving data analysis, data mining, and machine learning. 
&lt;p&gt;It has a powerful ability to build complex applications from scratch, and is capable of delivering results much faster than other languages.&lt;/p&gt;
&lt;p&gt;Many people believe that Java is a language for beginners, but that could not be farther from the truth. Java is very powerful and is used for many complicated tasks involving data analysis, deep learning, natural language processing, and data mining.&lt;/p&gt;
&lt;p&gt;Java is a little different than most languages due to its true garbage collection. Most languages delete themselves upon execution, and Java’s use of a true garbage collection makes it far more efficient.&lt;/p&gt;
&lt;p&gt;Best used for: Java is best used for creating complete applications. It makes building mobile or desktop applications incredibly easy.&lt;/p&gt;
&lt;p&gt;Pros/Cons: Java is a very fast language in comparison to its competitors, which helps to build more maintainable and scalable software. It also is easily portable due to it’s “Write once, Run anywhere” function. Java also has a true garbage collection which creates a huge advantage over other languages.&lt;/p&gt;
&lt;p&gt;Java is a more disciplined language, so it is not as flexible and friendly as some other languages. In comparison, Python syntax is very concise and easily readable. Java devs are a little more rare, meaning the networking opportunities and support are less easy to come by.&lt;/p&gt;
&lt;h2 id=&#34;4-r&#34;&gt;4. R&lt;/h2&gt;
&lt;hr&gt;
R is quickly rising the ranks as one of the most popular programming languages for data science, and for good reason. R is a highly extensible and easy to learn language that fosters an environment for statistical computing and graphics.
&lt;p&gt;All of this makes R an ideal choice for data science, big data, and machine learning.&lt;/p&gt;
&lt;p&gt;R is a powerful scripting language. This being so, means that R can handle large and complex data sets. This combined with it’s ever growing community makes it a top tier option for an aspiring data scientist.&lt;/p&gt;
&lt;p&gt;Best used for: R is best used in the world of data science. It is especially powerful when performing statistical operations.&lt;/p&gt;
&lt;p&gt;Pros/Cons: R has numerous pros including being open-source, large amount of support, multiple packages, quality plotting and graphing as well as various machine learning operations.&lt;/p&gt;
&lt;p&gt;The biggest downside of using R is security. R lacks basic security and as such it can not be embedded into a web application.&lt;/p&gt;
&lt;h2 id=&#34;5-cc&#34;&gt;5. C/C++&lt;/h2&gt;
&lt;hr&gt;
C is a great programming language to learn data science because it is one of the earliest programming languages, and because of this most newer languages use C/C++ as their codebase. 
&lt;p&gt;C/C++ are surprisingly useful for data science, due to their ability to compile data quickly. This allows programmers to have a much broader command of their applications. The low-level nature of C/C++ allows developers to dig deeper and fine tune certain aspects of applications that otherwise wouldn&amp;rsquo;t be possible.&lt;/p&gt;
&lt;p&gt;Best used for: C/C++ is best used for projects with massive scalability and performance requirements.&lt;/p&gt;
&lt;p&gt;Pros/Cons: C/C++ is extremely fast and is actually the only language that can compile over a gigabyte of data in less than a second. This is especially useful for big data applications.&lt;/p&gt;
&lt;p&gt;While C/C++ is incredibly useful for data science, it is among the more complicated side of programming languages for beginners due to its low-level nature.&lt;/p&gt;
&lt;h2 id=&#34;6-sql&#34;&gt;6. SQL&lt;/h2&gt;
&lt;hr&gt;
SQL is a very important language to learn in order to be a great data scientist. It is so important because a data scientist needs SQL in order to handle structured data. SQL gives you access to data and statistics which makes it a very useful resource for data science. 
&lt;p&gt;A database is necessary for data science, thus making using a database language such as SQL a necessity.  Anyone dealing with big data will need to have a sound knowledge of SQL in order to query databases.&lt;/p&gt;
&lt;p&gt;Best used for: SQl is the standard and most widely used programming languages for relational databases.&lt;/p&gt;
&lt;p&gt;Pros/Cons: SQL is a non-procedural language, this means that it does not require the use of traditional programming logic. This makes using SQL much easier because you don&amp;rsquo;t have to be an expert coder.&lt;/p&gt;
&lt;p&gt;SQL has a difficult interface that can make users uncomfortable when using the database. Some versions of SQL can be very costly and due to hidden business rules, complete control of the database is not always given.&lt;/p&gt;
&lt;h2 id=&#34;7-matlab&#34;&gt;7. MATLAB&lt;/h2&gt;
&lt;hr&gt;
MATLAB is a very powerful tool for mathematical and statistical computing, that allows implementation of algorithms and user interface creation. UI creation is especially easy with MATLAB due to it’s built in graphics for creating data plots and visualization. 
&lt;p&gt;This language is especially useful for learning data science, it is mostly used as a resource to accelerate knowledge of data science. Learning MATLAB is a great way to easily transition into deep learning, due to its functionality of the deep learning toolbox.&lt;/p&gt;
&lt;p&gt;Best used for: MATLAB is most commonly used in academia for teaching linear algebra and numerical analysis.&lt;/p&gt;
&lt;p&gt;Pros/Cons: MATLAB is an especially useful educational tool with complete platform independence. It has a huge library of predefined functions that provides tested and prepackaged solutions to many primary technical tasks. MATLAB has a tool that allows a programmer to create a graphical user interface for their program, making it easy to create refined data analysis programs.&lt;/p&gt;
&lt;p&gt;MATLAB is an interpreted language meaning that it is executed much slower than a compiled language. It is also not free and can be a very expensive program to use in comparison to a traditional compiler.&lt;/p&gt;
&lt;h2 id=&#34;8-scala&#34;&gt;8. Scala&lt;/h2&gt;
&lt;hr&gt;
Scala is a very powerful general purpose language that is very well suited for data science. This is a great language for someone looking to start a data science career.
&lt;p&gt;Scala is ideal when working with high-volume data sets. It is compiled Java bytecode and runs on a Java Virtual Machine. This allows interoperability with Java which opens many opportunities for someone working in data science.&lt;/p&gt;
&lt;p&gt;Scala can also be used with Spark to handle large amounts of siloed data. The underlying concurrency support makes Scala a perfect choice for building high-performance Data Science frameworks, such as Hadoop.&lt;/p&gt;
&lt;p&gt;Scala also has a vast number of libraries. With over 175,000 libraries there are endless functionalities within the language. It is also supported on various IDE’s such as IntelliJ IDEA, VS Code, Vim, Atom, Sublime Text, and even in your browser.&lt;/p&gt;
&lt;p&gt;Best used for: Scala is best used by data scientists that are working with high-volume data sets.&lt;/p&gt;
&lt;p&gt;Pros/Cons: Scala is an easy language to pick up, especially if you are already versed in the Java language itself. It is a highly functional language that is scalable and excellent for working with data analytics.&lt;/p&gt;
&lt;h2 id=&#34;9-julia&#34;&gt;9. Julia&lt;/h2&gt;
&lt;hr&gt;
Julia is another language rising in popularity. It is a multi-purpose programming language that is designed for numerical analysis and scientific computing. It’s popularity has risen due to its focus on performance. This has made it a top choice among high-profile businesses focusing on time-series analysis, risk analysis, and space mission planning. 
&lt;p&gt;Julia is a very versatile language, as it supports both parallel and distributed computing. While Julia is a dynamically typed language, it has the capability to also be used as a low-level programming language if needed.&lt;/p&gt;
&lt;p&gt;Best used for: Julia is best used for data visualization, operations on multi dimensional datasets, and deep learning due to its built-in support for a package manager.&lt;/p&gt;
&lt;p&gt;Pros/Cons: Julia is an easy to learn and extremely fast programming language. It is the fastest language for interactive computing available. It’s syntax is inspired by scripting languages like Python, MATLAB, and Ruby. This makes it really easy to quickly learn the basics and become productive quickly.&lt;/p&gt;
&lt;p&gt;The Julia community is unfortunately not very large. This makes it much harder to find quick answers to questions and can leave you spending a lot of time problem solving as compared to languages where every problem is solved by a quick google search.&lt;/p&gt;
&lt;h2 id=&#34;10-sas&#34;&gt;10. SAS&lt;/h2&gt;
&lt;hr&gt;
SAS is a tool used primarily for analyzing statistical data. It literally stands for statistical analysis software. The main purpose of SAS is to retrieve, report and analyze statistical data.
&lt;p&gt;SAS probably isn&amp;rsquo;t going to be the first language you learn, but for beginners having knowledge in SAS can create many more opportunities. It will help you tremendously if you are looking for a job in data management.&lt;/p&gt;
&lt;p&gt;Best used for: SAS is best used for business intelligence with tools in its belt like predictive and advanced analysis.&lt;/p&gt;
&lt;p&gt;Pros/Cons: SAS has been around for a very long time, and as such, most major companies are using SAS as their official language for analysis. This paired with the fact that it is easy to learn, means that there is a huge job market for SAS developers.&lt;/p&gt;
&lt;p&gt;There are two major disadvantages of SAS. It being a complete software, means that you cannot use all of its applications without a proper license. SAS also has a lack of graphic representation making it harder to translate data to a visual form.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Week 23.05 - 28.05</title>
      <link>https://example.com/post/week232805/</link>
      <pubDate>Sat, 28 May 2022 18:16:16 +0300</pubDate>
      <guid>https://example.com/post/week232805/</guid>
      <description>&lt;h1 id=&#34;news&#34;&gt;News&lt;/h1&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First of all, I worked, I was engaged in the development of detecting cheaters on EGE exam.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I studied, namely, I did a lot of laboratory work for the future.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;my-review-of-the-week&#34;&gt;My review of the week&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;I think the week has been quite productive. I did all homework not only for this week, but also for the next week. I got a lot of free time and spend it with benefit for me.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Face Recognition</title>
      <link>https://example.com/project/face-recognition/</link>
      <pubDate>Sat, 28 May 2022 18:08:29 +0300</pubDate>
      <guid>https://example.com/project/face-recognition/</guid>
      <description>&lt;p&gt;Clone this repo : &lt;a href=&#34;https://github.com/Timofey1/faceRecognitionDemo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Face Recognition demo github page&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;face-recognition-demo-uses&#34;&gt;Face Recognition Demo uses&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;facenet(trained on vggface2 dataset)&lt;/li&gt;
&lt;li&gt;MTCNN face detector&lt;/li&gt;
&lt;li&gt;mongoDB for storing facial embeddings&lt;/li&gt;
&lt;li&gt;spotify annoy for indexing faces and finding simular faces&lt;/li&gt;
&lt;li&gt;Flask framework + Flask-RESTful for REST API&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;installation-and-startup&#34;&gt;Installation and startup&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;run&#34;&gt;Run&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python app.py 
&lt;/code&gt;&lt;/pre&gt;
&lt;h6 id=&#34;or&#34;&gt;or&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;flask run 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;- Detector only
- Compare two loaded faces
- Add/Find face in DataBase (install mongoDB first)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Presentation</title>
      <link>https://example.com/post/presentation/</link>
      <pubDate>Sun, 15 May 2022 15:29:21 +0300</pubDate>
      <guid>https://example.com/post/presentation/</guid>
      <description>&lt;h2 id=&#34;1-create-an-easy-to-follow-structure&#34;&gt;1. Create an easy-to-follow structure&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;When it comes to what you have to say, break it down into three simple sections: your presentation needs an introduction, body, and conclusion.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A compelling introduction. Your introduction needs to briefly sum up what you’re going to talk about and why it’s useful or relevant to your audience.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Offer a body of evidence. The body of your presentation is where you hit ’em with the facts, quotes, and evidence to back up your main points.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sum up with key takeaways. The conclusion is where you loop back to your original statement and give the audience some key takeaways on how they can put into practice what they’ve learned.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No more than 10 slides in total. Who wants to sit through pages and pages of slides? No one, that’s who. By keeping your slide deck to 10 slides, even if your presentation is 30 minutes long, you’ll give the audience a chance to digest the on-screen messages in line with your talk. Using concept maps before structuring your slides can help keep to the point.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-limit-the-amount-of-copy-on-each-slide&#34;&gt;2. Limit the amount of copy on each slide&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;Less really is more, especially when it comes to making a good presentation. Too much text and the audience will just be reading the screen instead of looking at you and feeling the emotional impact of your message.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;No more than six words per slide. Marketing king Seth Godin says we should have just six words per slide – that’s not a lot of copy. Choose your words carefully and rewrite until you’ve got it just right.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Think ‘bite-size’ information. We called ourselves Biteable a reason: studies have shown that information is retained better when it’s broken down into bite-sized chunks. Video is a great way to learn and research suggests it’s 95% more compelling than text.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-be-savvy-with-design-details&#34;&gt;3. Be savvy with design details&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;A good design can make or break a presentation. If you haven’t got the budget for a designer, presentation tools such as Visme or Canva will help you make great slides, and Pexels or Unsplash offer stunning royalty-free images.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use color sparingly. Bright colors can dazzle, but too many can be offputting. Use the colors most relevant to your message. We’d recommend sticking with one or two (not counting black and white) for your palette so it has a consistent look and feel.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be consistent with your font. Consistent design makes you look more professional. Don’t switch between caps and lower case, Times New Roman and Comic Sans, or 8 and 30 point text size. Stick with one font and one size throughout. You can vary the emphasis with your words later, but keep your on-screen text uniform for a more cohesive message.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Format for perfection. A wonky line on a slide or a badly pixelated graphic will put some people off, as it will look like you haven’t tried very hard (or worse, that you just aren’t very good). Make sure your text is aligned and neat like in the example below.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-polish-several-times&#34;&gt;4. Polish several times&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;Just like some well-worn shoes, a good presentation often needs a few rounds of dusting before it’s all shiny and sparkly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Start Messy. Don’t be afraid to start messy. Using a non-linear writing tool like Milanote allows you to explore and outline your initial ideas in a flexible way before you even open up Powerpoint or Keynote. Arrange your ideas side-by-side and discover new connections that you didn’t see before.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit ruthlessly. At first you might have a huge amount of information and will wonder how you’re ever going get it down to six words per slide. That’s OK. Keep editing ruthlessly until you’ve pared your message down to the bare essentials.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get someone else to look at it. A fresh pair of eyes can work miracles when it comes to refining your presentation. Get a trusted mentor or colleague to review your work. If you don’t know anyone who can help, an online writing assistant like ProWritingAid or Grammarly can help you weed out a lot of problems.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Week 09.05-15.05</title>
      <link>https://example.com/post/091505/</link>
      <pubDate>Sun, 15 May 2022 15:23:51 +0300</pubDate>
      <guid>https://example.com/post/091505/</guid>
      <description>&lt;h1 id=&#34;news&#34;&gt;News&lt;/h1&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Repaired the roof on the cottage.&lt;/li&gt;
&lt;li&gt;Studied.&lt;/li&gt;
&lt;li&gt;Started working on a new project at work.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;my-review-of-the-week&#34;&gt;My review of the week&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;It was awesome.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LaTeX</title>
      <link>https://example.com/post/latex/</link>
      <pubDate>Sun, 08 May 2022 00:58:58 +0300</pubDate>
      <guid>https://example.com/post/latex/</guid>
      <description>&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;LaTeX is a software system for document preparation. When writing, the writer uses plain text as opposed to the formatted text found in &amp;ldquo;What You See Is What You Get&amp;rdquo; word processors like Microsoft Word, LibreOffice Writer and Apple Pages. The writer uses markup tagging conventions to define the general structure of a document to stylise text throughout a document (such as bold and italics), and to add citations and cross-references. A TeX distribution such as TeX Live or MiKTeX is used to produce an output file (such as PDF or DVI) suitable for printing or digital distribution.&lt;/p&gt;
&lt;p&gt;LaTeX is widely used in academiafor the communication and publication of scientific documents in many fields, including mathematics, computer science, engineering, physics, chemistry, economics, linguistics, quantitative psychology, philosophy, and political science. It also has a prominent role in the preparation and publication of books and articles that contain complex multilingual materials, such as Sanskrit and Greek. LaTeX uses the TeX typesetting program for formatting its output, and is itself written in the TeX macro language.&lt;/p&gt;
&lt;p&gt;LaTeX can be used as a standalone document preparation system, or as an intermediate format. In the latter role, for example, it is sometimes used as part of a pipeline for translating DocBook and other XML-based formats to PDF. The typesetting system offers programmable desktop publishing features and extensive facilities for automating most aspects of typesetting and desktop publishing, including numbering and cross-referencing of tables and figures, chapter and section headings, the inclusion of graphics, page layout, indexing and bibliographies.&lt;/p&gt;
&lt;p&gt;Like TeX, LaTeX started as a writing tool for mathematicians and computer scientists, but even from early in its development, it has also been taken up by scholars who needed to write documents that include complex math expressions or non-Latin scripts,such as Arabic, Devanagari and Chinese.&lt;/p&gt;
&lt;p&gt;LaTeX is intended to provide a high-level, descriptive markup language that accesses the power of TeX in an easier way for writers. In essence, TeX handles the layout side, while LaTeX handles the content side for document processing. LaTeX comprises a collection of TeX macros and a program to process LaTeX documents, and because the plain TeX formatting commands are elementary, it provides authors with ready-made commands for formatting and layout requirements such as chapter headings, footnotes, cross-references and bibliographies.&lt;/p&gt;
&lt;p&gt;LaTeX was originally written in the early 1980s by Leslie Lamport at SRI International. The current version is LaTeX2e (stylised as LATEX2ε), released in 1994, but updated in 2020. LaTeX3 (LATEX3) has been under long-term development since the early 1990s. LaTeX is free software and is distributed under the LaTeX Project Public License (LPPL).&lt;/p&gt;
&lt;h1 id=&#34;typesetting-system&#34;&gt;Typesetting system&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;LaTeX attempts to follow the design philosophy of separating presentation from content, so that authors can focus on the content of what they are writing without attending simultaneously to its visual appearance. In preparing a LaTeX document, the author specifies the logical structure using simple, familiar concepts such as chapter, section, table, figure, etc., and lets the LaTeX system handle the formatting and layout of these structures. As a result, it encourages the separation of the layout from the content — while still allowing manual typesetting adjustments whenever needed. This concept is similar to the mechanism by which many word processors allow styles to be defined globally for an entire document, or the use of Cascading Style Sheets in styling HTML documents.&lt;/p&gt;
&lt;p&gt;The LaTeX system is a markup language that handles typesetting and rendering, and can be arbitrarily extended by using the underlying macro language to develop custom macros such as new environments and commands. Such macros are often collected into packages, which could then be made available to address some specific typesetting needs such as the formatting of complex mathematical expressions or graphics (e.g., the use of the align environment provided by the amsmath package to produce aligned equations).&lt;/p&gt;
&lt;p&gt;In order to create a document in LaTeX, you first write a file, say document.tex, using your preferred text editor. Then you give your document.tex file as input to the TeX program (with the LaTeX macros loaded), which prompts TeX to write out a file suitable for onscreen viewing or printing. This write-format-preview cycle is one of the chief ways in which working with LaTeX differs from the What-You-See-Is-What-You-Get (WYSIWYG) style of document editing. It is similar to the code-compile-execute cycle known to computer programmers. Today, many LaTeX-aware editing programs make this cycle a simple matter through the pressing of a single key, while showing the output preview on the screen beside the input window. Some online LaTeX editors even automatically refresh the preview, while other online tools provide incremental editing in-place, mixed in with the preview in a streamlined single window.&lt;/p&gt;
&lt;h1 id=&#34;history&#34;&gt;History&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;LaTeX was created in the early 1980s by Leslie Lamport, when he was working at SRI. He needed to write TeX macros for his own use, and thought that with a little extra effort he could make a general package usable by others. Peter Gordon, an editor at Addison-Wesley, convinced him to write a LaTeX user&amp;rsquo;s manual for publication (Lamport was initially skeptical that anyone would pay money for it); it came out in 1986 and sold hundreds of thousands of copies. Meanwhile, Lamport released versions of his LaTeX macros in 1984 and 1985. On 21 August 1989, at a TeX Users Group (TUG) meeting at Stanford, Lamport agreed to turn over maintenance and development of LaTeX to Frank Mittelbach. Mittelbach, along with Chris Rowley and Rainer Schöpf, formed the LaTeX3 team; in 1994, they released LaTeX2e, the current standard version. LaTeX3 itself has since been cancelled with version features intended for that version being back-ported to LaTeX 2e since 2018.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Week 02.05-08.05</title>
      <link>https://example.com/post/week020805/</link>
      <pubDate>Sun, 08 May 2022 00:49:43 +0300</pubDate>
      <guid>https://example.com/post/week020805/</guid>
      <description>&lt;h1 id=&#34;news&#34;&gt;News&lt;/h1&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First of all, I worked, I was engaged in the development of tracking with a low frame rate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I studied, namely, I did a lot of laboratory work for the future.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;my-review-of-the-week&#34;&gt;My review of the week&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;I think the week has been quite productive. I did all homework not only for this week, but also for the next week. I got a lot of free time and spend it with benefit for me.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://example.com/post/getting-started/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/getting-started/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;Git  is software for tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development. Its goals include speed, data integrity, and support for distributed, non-linear workflows (thousands of parallel branches running on different systems).&lt;/p&gt;
&lt;p&gt;Git was originally authored by Linus Torvalds in 2005 for development of the Linux kernel, with other kernel developers contributing to its initial development. Since 2005, Junio Hamano has been the core maintainer. As with most other distributed version control systems, and unlike most client–server systems, every Git directory on every computer is a full-fledged repository with complete history and full version-tracking abilities, independent of network access or a central server. Git is free and open-source software distributed under the GPL-2.0-only license.&lt;/p&gt;
&lt;h2 id=&#34;history&#34;&gt;History&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;Git development began in April 2005, after many developers of the Linux kernel gave up access to BitKeeper, a proprietary source-control management (SCM) system that they had been using to maintain the project since 2002. The copyright holder of BitKeeper, Larry McVoy, had withdrawn free use of the product after claiming that Andrew Tridgell had created SourcePuller by reverse engineering the BitKeeper protocols. The same incident also spurred the creation of another version-control system, Mercurial.&lt;/p&gt;
&lt;p&gt;Linus Torvalds wanted a distributed system that he could use like BitKeeper, but none of the available free systems met his needs. Torvalds cited an example of a source-control management system needing 30 seconds to apply a patch and update all associated metadata, and noted that this would not scale to the needs of Linux kernel development, where synchronizing with fellow maintainers could require 250 such actions at once. For his design criterion, he specified that patching should take no more than three seconds, and added three more goals:&lt;/p&gt;
&lt;p&gt;Take Concurrent Versions System (CVS) as an example of what not to do; if in doubt, make the exact opposite decision.
Support a distributed, BitKeeper-like workflow.
Include very strong safeguards against corruption, either accidental or malicious.
These criteria eliminated every version-control system in use at the time, so immediately after the 2.6.12-rc2 Linux kernel development release, Torvalds set out to write his own.&lt;/p&gt;
&lt;p&gt;The development of Git began on 3 April 2005. Torvalds announced the project on 6 April and became self-hosting the next day. The first merge of multiple branches took place on 18 April. Torvalds achieved his performance goals; on 29 April, the nascent Git was benchmarked recording patches to the Linux kernel tree at the rate of 6.7 patches per second.On 16 June, Git managed the kernel 2.6.12 release.&lt;/p&gt;
&lt;p&gt;Torvalds turned over maintenance on 26 July 2005 to Junio Hamano, a major contributor to the project. Hamano was responsible for the 1.0 release on 21 December 2005 and remains the project&amp;rsquo;s core maintainer.&lt;/p&gt;
&lt;h2 id=&#34;design&#34;&gt;Design&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;Git&amp;rsquo;s design was inspired by BitKeeper and Monotone. Git was originally designed as a low-level version-control system engine, on top of which others could write front ends, such as Cogito or StGIT. The core Git project has since become a complete version-control system that is usable directly. While strongly influenced by BitKeeper, Torvalds deliberately avoided conventional approaches, leading to a unique design.&lt;/p&gt;
&lt;h2 id=&#34;implementations&#34;&gt;Implementations&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;Git (the main implementation in C) is primarily developed on Linux, although it also supports most major operating systems, including the BSDs (DragonFly BSD, FreeBSD, NetBSD, and OpenBSD), Solaris, macOS, and Windows.&lt;/p&gt;
&lt;p&gt;The first Windows port of Git was primarily a Linux-emulation framework that hosts the Linux version. Installing Git under Windows creates a similarly named Program Files directory containing the Mingw-w64 port of the GNU Compiler Collection, Perl 5, MSYS2 (itself a fork of Cygwin, a Unix-like emulation environment for Windows) and various other Windows ports or emulations of Linux utilities and libraries. Currently, native Windows builds of Git are distributed as 32- and 64-bit installers.The git official website currently maintains a build of Git for Windows, still using the MSYS2 environment.&lt;/p&gt;
&lt;p&gt;The JGit implementation of Git is a pure Java software library, designed to be embedded in any Java application. JGit is used in the Gerrit code-review tool, and in EGit, a Git client for the Eclipse IDE.&lt;/p&gt;
&lt;p&gt;Go-git is an open-source implementation of Git written in pure Go.It is currently used for backing projects as a SQL interface for Git code repositories and providing encryption for Git.&lt;/p&gt;
&lt;p&gt;The Dulwich implementation of Git is a pure Python software component for Python 2.7, 3.4 and 3.5.&lt;/p&gt;
&lt;p&gt;The libgit2 implementation of Git is an ANSI C software library with no other dependencies, which can be built on multiple platforms, including Windows, Linux, macOS, and BSD. It has bindings for many programming languages, including Ruby, Python, and Haskell.&lt;/p&gt;
&lt;h2 id=&#34;security&#34;&gt;Security&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;Git does not provide access-control mechanisms, but was designed for operation with other tools that specialize in access control.&lt;/p&gt;
&lt;p&gt;On 17 December 2014, an exploit was found affecting the Windows and macOS versions of the Git client. An attacker could perform arbitrary code execution on a target computer with Git installed by creating a malicious Git tree (directory) named .git (a directory in Git repositories that stores all the data of the repository) in a different case (such as .GIT or .Git, needed because Git does not allow the all-lowercase version of .git to be created manually) with malicious files in the .git/hooks subdirectory (a folder with executable files that Git runs) on a repository that the attacker made or on a repository that the attacker can modify. If a Windows or Mac user pulls (downloads) a version of the repository with the malicious directory, then switches to that directory, the .git directory will be overwritten (due to the case-insensitive trait of the Windows and Mac filesystems) and the malicious executable files in .git/hooks may be run, which results in the attacker&amp;rsquo;s commands being executed. An attacker could also modify the .git/config configuration file, which allows the attacker to create malicious Git aliases (aliases for Git commands or external commands) or modify extant aliases to execute malicious commands when run. The vulnerability was patched in version 2.2.1 of Git, released on 17 December 2014, and announced the next day.&lt;/p&gt;
&lt;p&gt;Git version 2.6.1, released on 29 September 2015, contained a patch for a security vulnerability (CVE-2015-7545) that allowed arbitrary code execution. The vulnerability was exploitable if an attacker could convince a victim to clone a specific URL, as the arbitrary commands were embedded in the URL itself. An attacker could use the exploit via a man-in-the-middle attack if the connection was unencrypted, as they could redirect the user to a URL of their choice. Recursive clones were also vulnerable, since they allowed the controller of a repository to specify arbitrary URLs via the gitmodules file.&lt;/p&gt;
&lt;p&gt;Git uses SHA-1 hashes internally. Linus Torvalds has responded that the hash was mostly to guard against accidental corruption, and the security a cryptographically secure hash gives was just an accidental side effect, with the main security being signing elsewhere. Since a demonstration of the SHAttered attack against git in 2017, git was modified to use a SHA-1 variant resistant to this attack. A plan for hash function transition is being written since February 2020.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://example.com/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://example.com/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-wowchemy&#34;&gt;Create slides in Markdown with Wowchemy&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wowchemy&lt;/a&gt; | &lt;a href=&#34;https://owchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;porridge&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;blueberry&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;porridge&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;blueberry&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Eating...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;span class=&#34;fragment &#34; &gt;
  One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  &lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  Three
&lt;/span&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{% speaker_note %}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; Only the speaker can read these notes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; Press &lt;span class=&#34;sb&#34;&gt;`S`&lt;/span&gt; key to view
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {{% /speaker_note %}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;slide&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;background-image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/media/boards.jpg&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;slide&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;#0000FF&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;slide&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;my-style&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;reveal&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;reveal&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;reveal&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h3&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;navy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/discussions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example conference paper</title>
      <link>https://example.com/publication/example/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      <guid>https://example.com/publication/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Create your slides in Markdown - click the &lt;em&gt;Slides&lt;/em&gt; button to check out the example.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code, math, and images&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://example.com/admin/config.yml</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/admin/config.yml</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
